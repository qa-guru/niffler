server:
  port: 8090

spring:
  application:
    name: niffler-gateway

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    net.devh.boot.grpc: INFO
    org.springframework.boot.autoconfigure: INFO

niffler-userdata:
  client: soap

---
spring:
  config:
    activate:
      on-profile: 'local'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'http://127.0.0.1:9000'
  graphql:
    graphiql:
      enabled: true

grpc:
  client:
    grpcCurrencyClient:
      address: 'static://localhost:8092'
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: 'http://127.0.0.1:8091'
niffler-userdata:
  base-uri: 'http://127.0.0.1:8089'
niffler-spend:
  base-uri: 'http://127.0.0.1:8093'
niffler-front:
  base-uri: 'http://127.0.0.1:3000'
niffler-gateway:
  base-uri: 'http://127.0.0.1:8090'
---
spring:
  config:
    activate:
      on-profile: 'docker'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'http://auth.niffler.dc:9000'

grpc:
  client:
    grpcCurrencyClient:
      address: 'static://currency.niffler.dc:8092'
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: 'http://currency.niffler.dc:8091'
niffler-userdata:
  base-uri: 'http://userdata.niffler.dc:8089'
niffler-spend:
  base-uri: 'http://spend.niffler.dc:8093'
niffler-front:
  base-uri: 'http://frontend.niffler.dc'
niffler-gateway:
  base-uri: 'http://gateway.niffler.dc:8090'
---
spring:
  config:
    activate:
      on-profile: 'prod'
    import: vault://
  cloud:
    vault:
      authentication: TOKEN
      host: vault.qa.guru
      uri: https://vault.qa.guru
      token: ${VAULT_TOKEN}
      kv:
        enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'https://auth.niffler.qa.guru'

grpc:
  client:
    grpcCurrencyClient:
      address: ${niffler-currency.grpc.url}
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: ${niffler-currency.url}
niffler-userdata:
  base-uri: ${niffler-userdata.url}
niffler-spend:
  base-uri: ${niffler-spend.url}
niffler-front:
  base-uri: 'https://niffler.qa.guru'
niffler-gateway:
  base-uri: 'https://api.niffler.qa.guru'
---
spring:
  config:
    activate:
      on-profile: 'staging'
    import: vault://
  cloud:
    vault:
      authentication: TOKEN
      host: vault.qa.guru
      uri: https://vault.qa.guru
      token: ${VAULT_TOKEN}
      kv:
        enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'https://auth.niffler-stage.qa.guru'

grpc:
  client:
    grpcCurrencyClient:
      address: ${niffler-currency.grpc.url}
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: ${niffler-currency.url}
niffler-userdata:
  base-uri: ${niffler-userdata.url}
niffler-spend:
  base-uri: ${niffler-spend.url}
niffler-front:
  base-uri: 'https://niffler-stage.qa.guru'
niffler-gateway:
  base-uri: 'https://api.niffler-stage.qa.guru'
---