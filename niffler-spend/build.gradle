plugins {
    id 'org.springframework.boot' version '3.4.4'
    id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'guru.qa'
version = '2.0.2'

dependencies {
    implementation project(':niffler-grpc-common')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "net.devh:grpc-client-spring-boot-starter:${project.ext.springGrpcVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-vault-config:${project.ext.springVaultVersion}"
    implementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
    implementation "org.flywaydb:flyway-database-postgresql:${project.ext.flywayVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    runtimeOnly "org.postgresql:postgresql:${project.ext.postgresDriverVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.h2database:h2:${project.ext.h2Version}"
    testImplementation "org.mockito:mockito-core:${project.ext.mockitoVersion}"
    testImplementation("org.mockito:mockito-junit-jupiter:${project.ext.mockitoVersion}") {
        exclude group: "org.junit.jupiter"
    }
}

jib {
    container {
        ports = ['8093']
        jvmFlags = ["-Dspring.profiles.active=${System.env.PROFILE}"]
        environment = [
                'VAULT_TOKEN': "${System.env.VAULT_TOKEN}".toString(),
                'TZ'         : 'Europe/Moscow'
        ]
        creationTime = 'USE_CURRENT_TIMESTAMP'
        labels = [
                'maintainer': 'Dmitrii Tuchs @dtuchs',
                'version'   : "${project.version}".toString()
        ]
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "${project.ext.dockerHubName}/${project.name}-${System.env.PROFILE}"
        tags = ['latest', "${project.version}"]
    }
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test

tasks.register('printVersion') {
    doLast {
        println project.version
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
