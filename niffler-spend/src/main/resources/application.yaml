server:
  port: 8093

spring:
  application:
    name: niffler-spend
  datasource:
    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 10000
      max-lifetime: 1000
      auto-commit: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    schemas: public
    locations: classpath:db/migration/niffler-spend
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    generate-ddl: true
    open-in-view: false
  cloud:
    compatibility-verifier:
      enabled: false
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.boot.autoconfigure: INFO

---
spring:
  config:
    activate:
      on-profile: 'local'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  datasource:
    url: 'jdbc:postgresql://localhost:5432/niffler-spend'
    username: postgres
    password: secret
grpc:
  client:
    grpcCurrencyClient:
      address: 'static://localhost:8092'
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: 'http://localhost:8091'
niffler-userdata:
  base-uri: 'http://localhost:8089'
---
spring:
  config:
    activate:
      on-profile: 'docker'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  datasource:
    url: 'jdbc:postgresql://niffler-all-db:5432/niffler-spend'
    username: postgres
    password: secret
grpc:
  client:
    grpcCurrencyClient:
      address: 'static://currency.niffler.dc:8092'
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: 'http://currency.niffler.dc:8091'
niffler-userdata:
  base-uri: 'http://userdata.niffler.dc:8089'
---
spring:
  config:
    activate:
      on-profile: 'prod'
    import: vault://
  cloud:
    vault:
      authentication: TOKEN
      host: vault.qa.guru
      uri: https://vault.qa.guru
      token: ${VAULT_TOKEN}
      kv:
        enabled: true
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
grpc:
  client:
    grpcCurrencyClient:
      address: ${niffler-currency.grpc.url}
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: ${niffler-currency.url}
niffler-userdata:
  base-uri: ${niffler-userdata.url}
---
spring:
  config:
    activate:
      on-profile: 'staging'
    import: vault://
  cloud:
    vault:
      authentication: TOKEN
      host: vault.qa.guru
      uri: https://vault.qa.guru
      token: ${VAULT_TOKEN}
      kv:
        enabled: true
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
grpc:
  client:
    grpcCurrencyClient:
      address: ${niffler-currency.grpc.url}
      negotiationType: PLAINTEXT

niffler-currency:
  base-uri: ${niffler-currency.url}
niffler-userdata:
  base-uri: ${niffler-userdata.url}
---